{"title":"Vue 生命周期","uid":"2a1c9c4cc2eeb3e5662886a5a5254cb8","slug":"Vue生命周期","date":"2024-04-20T01:09:00.000Z","updated":"2025-04-03T13:51:27.838Z","comments":true,"path":"api/articles/Vue生命周期.json","keywords":null,"cover":"/img/Vuelifetime_cover.png","content":"<h1 id=\"Vue生命周期\"><a href=\"#Vue生命周期\" class=\"headerlink\" title=\"Vue生命周期\"></a>Vue生命周期</h1><h3 id=\"生命周期概念\"><a href=\"#生命周期概念\" class=\"headerlink\" title=\"生命周期概念\"></a>生命周期概念</h3><p>​\t<strong>官方解释</strong></p>\n<p>​\t每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等。同时在这个过程中也会运行一些叫做<strong>生命周期钩子</strong>的函数，这给了用户在不同阶段添加自己的代码的机会。</p>\n<p>​\t<strong>简单理解</strong></p>\n<p>​\t简单来说就是Vue实例被创建时会经过很多步骤，比如<code>beforeCreate</code>(创建前)，<code>created</code>(完成创建)，<code>beforeMount</code>(挂载前)，<code>mounted</code>(完成挂载)…….</p>\n<p>在这些特殊时期，Vue提供了一些名为<strong>生命周期钩子</strong>的函数，也就是这些函数会在这些时期执行。你可以在这些函数中添加自己的代码。</p>\n<h3 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;root&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">:style</span>=<span class=\"string\">&quot;&#123;opacity&#125;&quot;</span>&gt;</span>欢迎使用VUE<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  \t<span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">el</span>:<span class=\"string\">&#x27;#root&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">data</span>:&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">opacity</span>:<span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">//当网页元素全部挂在完成时执行mount()中的代码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      \t\t\t<span class=\"title function_\">mounted</span>():&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      \t\t\t\t\t<span class=\"built_in\">setInterval</span>(<span class=\"function\">()=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      \t\t\t\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">opacity</span> -=<span class=\"number\">0.01</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      \t\t\t\t\t\t<span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">opacity</span> &lt;= <span class=\"number\">0</span>) <span class=\"variable language_\">this</span>.<span class=\"property\">opacity</span> = <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    \t\t\t\t\t\t&#125;,<span class=\"number\">16</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    \t\t\t\t&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"深入生命周期\"><a href=\"#深入生命周期\" class=\"headerlink\" title=\"深入生命周期\"></a>深入生命周期</h3><img src=\"https://s21.ax1x.com/2024/04/20/pkSy8dU.png\" alt=\"JSObject\" style=\"zoom:50%;\" />\n\n<h4 id=\"名词解释\"><a href=\"#名词解释\" class=\"headerlink\" title=\"名词解释\"></a>名词解释</h4><h5 id=\"挂载阶段\"><a href=\"#挂载阶段\" class=\"headerlink\" title=\"挂载阶段\"></a>挂载阶段</h5><p>​\t<strong>Init Events &amp; Lifecycle</strong>：初始化：生命周期、事件，但数据处理还没开始。</p>\n<p>​\t<strong>beforeCreate</strong>：这时<strong>无法</strong>通过vm访问到data中的数据、methods中的方法。</p>\n<p>​\t<strong>Init injections &amp; reactivity</strong>：初始化：数据监测、数据代理。</p>\n<p>​\t<strong>created</strong>：这时<strong>可以</strong>通过vm访问到data中的数据、methods中配置的方法。</p>\n<p>​\t<img src=\"https://s21.ax1x.com/2024/04/20/pkSyUzR.png\" alt=\"Vue\" style=\"zoom:33%;\" />：此阶段Vue开始解析模板，生成虚拟DOM（内存中），页面还不能显示解析好的内容。</p>\n<p>​\t<strong>beforeMount</strong>：这时页面呈现的是未经Vue编译的DOM结构，所有对DOM的操作最终都不奏效。</p>\n<p>​\t<strong>Create vm.$el and replace “el” with it</strong>：将内存中的虚拟DOM转为真实DOM插入页面。</p>\n<p>​\t<strong>mounted</strong>：页面中呈现的是经过Vue编译的DOM，对DOM操作有效（尽可能避免）。至此初始化过程结束，一般在此进行：开启定时器，发送网络请求，订阅消息，绑定自定义事件等初始化操作。</p>\n<h5 id=\"更新阶段\"><a href=\"#更新阶段\" class=\"headerlink\" title=\"更新阶段\"></a>更新阶段</h5><p>​\t<strong>beforeUpdate</strong>：数据发生了更新，此时数据是新的，但是页面是旧的，即：页面尚未和数据保持同步。\t</p>\n<p>​\t<strong>Virtual DOM re-render and patch</strong>：根据新数据，生成新的虚拟 DOM，随后与旧的虚拟 DOM 进行比较，最终完成页面更新，即：完成了 Model-&gt;View 的更新。</p>\n<p>​\t<strong>updated</strong>：此时数据是新的，页面也是新的，即：页面和数据保持同步。</p>\n<h5 id=\"销毁流程\"><a href=\"#销毁流程\" class=\"headerlink\" title=\"销毁流程\"></a>销毁流程</h5><p>​\t<strong>beforeDestroy</strong>：vm中所有的：data、methods、指令等等，都处于可用状态，马上要执行销毁过程，一般在此阶段：关闭定时器、取消订阅消息、解绑自定义事件等收尾操作。</p>\n<p>​\t<strong>Teardow watchers,child components and event listeners</strong>：拆除监视者，孩子组件和事件监听者。</p>\n<p>​\t<strong>destroyed</strong>：销毁完成。</p>\n<h3 id=\"重要的钩子\"><a href=\"#重要的钩子\" class=\"headerlink\" title=\"重要的钩子\"></a>重要的钩子</h3><ol>\n<li><p><strong>mounted()</strong></p>\n<p>常在此钩子中进行发送 ajax 请求，启动定时器，绑定自定义事件，订阅消息等操作。</p>\n</li>\n<li><p><strong>beforeDestroy()</strong></p>\n</li>\n</ol>\n<p>​\t常在此钩子中进行清除定时器，解绑自定义事件，取消订阅消息等操作。</p>\n","text":"Vue生命周期生命周期概念​ 官方解释 ​ 每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并...","permalink":"/post/Vue生命周期","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"笔记","slug":"笔记","count":13,"path":"api/categories/笔记.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"},{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\"><span class=\"toc-text\">Vue生命周期</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">生命周期概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">示例代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%B1%E5%85%A5%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\"><span class=\"toc-text\">深入生命周期</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A\"><span class=\"toc-text\">名词解释</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8C%82%E8%BD%BD%E9%98%B6%E6%AE%B5\"><span class=\"toc-text\">挂载阶段</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%96%B0%E9%98%B6%E6%AE%B5\"><span class=\"toc-text\">更新阶段</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%94%80%E6%AF%81%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">销毁流程</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%8D%E8%A6%81%E7%9A%84%E9%92%A9%E5%AD%90\"><span class=\"toc-text\">重要的钩子</span></a></li></ol></li></ol></li></ol>","author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"手写 SpringIOC 框架","uid":"fc209dd052d70f296f5bae56a493f474","slug":"手写-SpringIOC-框架","date":"2024-11-05T14:28:40.000Z","updated":"2024-11-05T14:34:23.306Z","comments":true,"path":"api/articles/手写-SpringIOC-框架.json","keywords":null,"cover":"/img/Vuemodule_cover.png","text":"为啥要手写 Spring IOC 框架通过自己写一遍框架，可以更好理解 SpringIOC 的底层原理。 准备阶段创建myspring模块 引入相关依赖因为需要...","permalink":"/post/手写-SpringIOC-框架","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"笔记","slug":"笔记","count":13,"path":"api/categories/笔记.json"}],"tags":[{"name":"Spring","slug":"Spring","count":1,"path":"api/tags/Spring.json"},{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}}},"next_post":{"title":"Vue 组件化","uid":"67e57f0cabb58a64dbb4d43ca7066cb5","slug":"Vue组件化(上)","date":"2024-04-20T01:09:00.000Z","updated":"2024-04-21T05:25:10.278Z","comments":true,"path":"api/articles/Vue组件化(上).json","keywords":null,"cover":"/img/Vuemodule_cover.png","text":"Vue组件化为什么会有组件 在传统方法编写一个前端应用时，往往会出现许多为了实现不同功能的文件比如某个区域的 CSS 文件，某个交互效果的 JS 文件，这样复杂...","permalink":"/post/Vue组件化(上)","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"笔记","slug":"笔记","count":13,"path":"api/categories/笔记.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"},{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}}}}