{"title":"Cookie理论基础","uid":"9a1999a60d81f143647e177af12b114b","slug":"Cookie理论基础","date":"2025-03-31T11:43:06.000Z","updated":"2025-03-31T11:52:33.820Z","comments":true,"path":"api/articles/Cookie理论基础.json","keywords":null,"cover":"/img/Vuemodule_cover.png","content":"<h1 id=\"Cookie的理论基础\"><a href=\"#Cookie的理论基础\" class=\"headerlink\" title=\"Cookie的理论基础\"></a>Cookie的理论基础</h1><h2 id=\"什么是Cookie\"><a href=\"#什么是Cookie\" class=\"headerlink\" title=\"什么是Cookie\"></a>什么是Cookie</h2><p>Cookie是由服务器生成的一段纯文本数据，通过HTTP响应头(Set-Cookie)发送给浏览器 <strong>(JavaEE中通过new Cookie(name,value)来创建Cookie，使用request.addCookie将Cookie发送到浏览器中)</strong> ，并由浏览器存储在本地。随后，每次向同一服务器发起请求时，浏览器都会在HTTP请求头中带上相应的Cookie，从而帮助服务器识别用户和维护会话状态。</p>\n<h2 id=\"与Session的区别\"><a href=\"#与Session的区别\" class=\"headerlink\" title=\"与Session的区别\"></a>与Session的区别</h2><p>Cookie和Session机制都是为了保存会话状态，Cookie将会话状态保存在浏览器本地，Session将会话状态保存在服务器端。</p>\n<h2 id=\"JavaEE中使用Cookie\"><a href=\"#JavaEE中使用Cookie\" class=\"headerlink\" title=\"JavaEE中使用Cookie\"></a>JavaEE中使用Cookie</h2><p>在JavaEE中提供有Cookie类，可以对Cookie进行操作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建cookie对象</span></span><br><span class=\"line\"><span class=\"type\">Cookie</span> <span class=\"variable\">cookie</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>(<span class=\"string\">&quot;cookie&quot;</span>, <span class=\"string\">&quot;1234&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//设置cookie的存在时间</span></span><br><span class=\"line\"><span class=\"comment\">//value&gt;0则保存在硬盘中</span></span><br><span class=\"line\"><span class=\"comment\">//value=0则表示删除同名cookie</span></span><br><span class=\"line\"><span class=\"comment\">//value&lt;0则cookie不会被存储到硬盘文件中，会放在浏览器运行内存中</span></span><br><span class=\"line\">cookie.setMaxAge(<span class=\"number\">3600</span>);</span><br><span class=\"line\"><span class=\"comment\">//Change the cookie&#x27;s Path to project&#x27;s context path</span></span><br><span class=\"line\">cookie.setPath(req.getContextPath());</span><br><span class=\"line\"><span class=\"comment\">//把cookie传到浏览器</span></span><br><span class=\"line\">resp.addCookie(cookie);</span><br></pre></td></tr></table></figure>\n\n<p>新建的Cookie默认Path是创建Cookie路径的上一级，比如在servlet&#x2F;cookie这个路径创建Cookie，那么默认路径就是&#x2F;servlet，在servlet之下的路径都可以正常获Cookie。</p>\n<p>想要从浏览器中获取Cookie，使用<code>request.getCookies()</code>方法，它返回浏览器中指定路径下的所有Cookie数组。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie[] cookies = req.getCookies();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (cookies != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Cookie cookie : cookies) &#123;</span><br><span class=\"line\">         <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> cookie.getName();</span><br><span class=\"line\">         <span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> cookie.getValue();</span><br><span class=\"line\">         System.out.println(name+<span class=\"string\">&quot;=&quot;</span>+value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n","text":"Cookie的理论基础什么是CookieCookie是由服务器生成的一段纯文本数据，通过HTTP响应头(Set-Cookie)发送给浏览器 (JavaEE中通过...","permalink":"/post/Cookie理论基础","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"笔记","slug":"笔记","count":9,"path":"api/categories/笔记.json"}],"tags":[{"name":"笔记","slug":"笔记","count":5,"path":"api/tags/笔记.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Cookie%E7%9A%84%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">Cookie的理论基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFCookie\"><span class=\"toc-text\">什么是Cookie</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8ESession%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">与Session的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JavaEE%E4%B8%AD%E4%BD%BF%E7%94%A8Cookie\"><span class=\"toc-text\">JavaEE中使用Cookie</span></a></li></ol></li></ol>","author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"JSP 九大内置对象","uid":"c67ce29f34ee2d9d72274617ca0bb9bd","slug":"JSP-九大内置对象","date":"2025-04-02T11:01:56.000Z","updated":"2025-04-02T11:04:08.128Z","comments":true,"path":"api/articles/JSP-九大内置对象.json","keywords":null,"cover":"/img/changli.png","text":"JSP九大内置对象哪九个内置对象？ jakarta.servlet.http.HttpServletRequest request jakarta.servle...","permalink":"/post/JSP-九大内置对象","photos":[],"count_time":{"symbolsCount":737,"symbolsTime":"1 mins."},"categories":[{"name":"笔记","slug":"笔记","count":9,"path":"api/categories/笔记.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":3,"path":"api/tags/JavaWeb.json"},{"name":"笔记","slug":"笔记","count":5,"path":"api/tags/笔记.json"}],"author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}}},"next_post":{"title":"不能把 jsp 文件放在 WEB-INF 文件夹中","uid":"9fe8d71f2f383c0ca8dbe4af2c600738","slug":"不能把-jsp-文件放在-WEB-INF-文件夹中","date":"2025-03-14T09:21:47.000Z","updated":"2025-03-14T10:01:26.554Z","comments":true,"path":"api/articles/不能把-jsp-文件放在-WEB-INF-文件夹中.json","keywords":null,"cover":null,"text":"切记！！JavaWeb 项目中，如果你有 jsp 或者 html 页面展示文件，不能将它放在 WEB-INF 目录中，这样会导致访问路径时出现请求资源不可用的错...","permalink":"/post/不能把-jsp-文件放在-WEB-INF-文件夹中","photos":[],"count_time":{"symbolsCount":120,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":3,"path":"api/tags/JavaWeb.json"},{"name":"笔记","slug":"笔记","count":5,"path":"api/tags/笔记.json"}],"author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}}}}