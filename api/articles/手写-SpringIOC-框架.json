{"title":"手写 SpringIOC 框架","uid":"fc209dd052d70f296f5bae56a493f474","slug":"手写-SpringIOC-框架","date":"2024-11-05T14:28:40.000Z","updated":"2024-11-05T14:34:23.306Z","comments":true,"path":"api/articles/手写-SpringIOC-框架.json","keywords":null,"cover":"/img/Vuemodule_cover.png","content":"<h3 id=\"为啥要手写-Spring-IOC-框架\"><a href=\"#为啥要手写-Spring-IOC-框架\" class=\"headerlink\" title=\"为啥要手写 Spring IOC 框架\"></a>为啥要手写 Spring IOC 框架</h3><p>通过自己写一遍框架，可以更好理解 SpringIOC 的底层原理。</p>\n<h3 id=\"准备阶段\"><a href=\"#准备阶段\" class=\"headerlink\" title=\"准备阶段\"></a>准备阶段</h3><h4 id=\"创建myspring模块\"><a href=\"#创建myspring模块\" class=\"headerlink\" title=\"创建myspring模块\"></a>创建myspring模块</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/40375991/1730815360838-9422195e-16b2-47ab-92a0-f453fc64e4af.png\"></p>\n<h4 id=\"引入相关依赖\"><a href=\"#引入相关依赖\" class=\"headerlink\" title=\"引入相关依赖\"></a>引入相关依赖</h4><p>因为需要解析 XML 文件，所以需要用到 dom4j 组件解析 XML 文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.myspringframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>myspring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--dom4j是一个能够解析 XML 的 java 组件--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.dom4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dom4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>jaxen<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jaxen<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>21<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>21<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"准备好要管理的-Bean\"><a href=\"#准备好要管理的-Bean\" class=\"headerlink\" title=\"准备好要管理的 Bean\"></a>准备好要管理的 Bean</h4><h5 id=\"Vip类\"><a href=\"#Vip类\" class=\"headerlink\" title=\"Vip类\"></a>Vip类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.haishili.myspring.bean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Vip</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Vip&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;name=&#x27;&quot;</span> + name + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, age=&quot;</span> + age +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"OrderDao类\"><a href=\"#OrderDao类\" class=\"headerlink\" title=\"OrderDao类\"></a>OrderDao类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.haishili.myspring.bean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">insert</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;正在保存订单信息&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"OrderService类\"><a href=\"#OrderService类\" class=\"headerlink\" title=\"OrderService类\"></a>OrderService类</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.haishili.myspring.bean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> OrderDao orderDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setOrderDao</span><span class=\"params\">(OrderDao orderDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.orderDao = orderDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        orderDao.insert();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"写好配置文件\"><a href=\"#写好配置文件\" class=\"headerlink\" title=\"写好配置文件\"></a>写好配置文件</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;vip&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.haishili.myspring.bean.Vip&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jack&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;19&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;orderDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.haishili.myspring.bean.OrderDao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;orderService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.haishili.myspring.bean.OrderService&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;orderDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;orderDao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编写阶段\"><a href=\"#编写阶段\" class=\"headerlink\" title=\"编写阶段\"></a>编写阶段</h3><h4 id=\"编写-ApplicationContext接口\"><a href=\"#编写-ApplicationContext接口\" class=\"headerlink\" title=\"编写 ApplicationContext接口\"></a>编写 ApplicationContext接口</h4><p><code>ApplicationContext</code>接口提供了一个 getBean 方法用于获取相应 bean 对象，这个方法需要提供具体 Bean 名称。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.myspringframework.core;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//MySpring 框架应用上下文接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">ApplicationContext</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//根据 Bean 的名称获取对应的 bean 对象</span></span><br><span class=\"line\">    Object <span class=\"title function_\">getBean</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"编写-ClassPathXmlApplicationContext-类\"><a href=\"#编写-ClassPathXmlApplicationContext-类\" class=\"headerlink\" title=\"编写 ClassPathXmlApplicationContext 类\"></a>编写 ClassPathXmlApplicationContext 类</h4><p><code>ClassPathXmlApplicationContext</code>类实现 <code>ApplicationContext</code>接口，并重写 getBean 方法。</p>\n<p><code>ClassPathXmlApplicationContext</code>有一个构造方法，在使用 Spring 的时候，我们会在<code>ClassPathXmlApplicationContext</code>构造方法中传入<code>spring.xml</code>这个配置文件的路径，以此让它解析 xml 文件。因此我们在写<code>ClassPathXmlApplicationContext</code>类时也需要接收<code>spring.xml</code>的路径。</p>\n<p>我们知道，在Singleton Bean 中，为了解决循环依赖的问题，Spring使用三重缓存机制，简单的说就是通过提前曝光 Bean 对象，再为属性赋值，这样来解决循环依赖的问题，因为我们也需要让 Bean 提前曝光。</p>\n<p>我们使用 Map 集合存放 Bean 对象，键值对分别是 <code>id</code>和<code>Bean 对象</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.myspringframework.core;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.dom4j.Document;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.dom4j.Element;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.dom4j.Node;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.dom4j.io.SAXReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Constructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ApplicationContext</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String, Object&gt; singletons = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//接收 xml 配置文件路径并解析配置文件，初始化所有 Bean 对象</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ClassPathXmlApplicationContext</span><span class=\"params\">(String configLocation)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//解析 myspring.xml文件，然后实例化 Bean，将 Bean 存放到singletons集合中</span></span><br><span class=\"line\">            <span class=\"comment\">//这是 dom4j 解析 XML 文件的核心对象</span></span><br><span class=\"line\">            <span class=\"type\">SAXReader</span> <span class=\"variable\">reader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SAXReader</span>();</span><br><span class=\"line\">            <span class=\"comment\">//获取一个输入流，指向配置文件</span></span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">is</span> <span class=\"operator\">=</span> ClassLoader.getSystemClassLoader().getResourceAsStream(configLocation);</span><br><span class=\"line\">            <span class=\"comment\">//读文件</span></span><br><span class=\"line\">            <span class=\"type\">Document</span> <span class=\"variable\">doc</span> <span class=\"operator\">=</span> reader.read(is);</span><br><span class=\"line\">            <span class=\"comment\">//获取所有 bean 标签</span></span><br><span class=\"line\">            List&lt;Node&gt; nodes = doc.selectNodes(<span class=\"string\">&quot;//bean&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">//遍历 bean 标签</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Node node : nodes) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//向下转型，使用 Element 接口里的更多方法</span></span><br><span class=\"line\">                <span class=\"type\">Element</span> <span class=\"variable\">beanElement</span> <span class=\"operator\">=</span> (Element) node;</span><br><span class=\"line\">                <span class=\"comment\">//获取 id</span></span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> beanElement.attributeValue(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">                <span class=\"comment\">//获取 className</span></span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">className</span> <span class=\"operator\">=</span> beanElement.attributeValue(<span class=\"string\">&quot;class&quot;</span>);</span><br><span class=\"line\">                <span class=\"comment\">//通过反射机制创建对象，将其放入 Map 集合提前曝光</span></span><br><span class=\"line\">                Class&lt;?&gt; clazz = Class.forName(className);</span><br><span class=\"line\">                Constructor&lt;?&gt; declaredConstructor = clazz.getDeclaredConstructor();</span><br><span class=\"line\">                <span class=\"type\">Object</span> <span class=\"variable\">instance</span> <span class=\"operator\">=</span> declaredConstructor.newInstance();</span><br><span class=\"line\">                singletons.put(id, instance);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//为属性赋值</span></span><br><span class=\"line\">            nodes.forEach(node -&gt; &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                    <span class=\"type\">Element</span> <span class=\"variable\">element</span> <span class=\"operator\">=</span> (Element) node;</span><br><span class=\"line\">                    <span class=\"comment\">//获取 id</span></span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> element.attributeValue(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//获取 className</span></span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">className</span> <span class=\"operator\">=</span> element.attributeValue(<span class=\"string\">&quot;class&quot;</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//获取 class</span></span><br><span class=\"line\">                    Class&lt;?&gt; clazz = Class.forName(className);</span><br><span class=\"line\">                    <span class=\"comment\">//获取该 bean 标签下所有的 property 标签</span></span><br><span class=\"line\">                    List&lt;Element&gt; propertys = element.elements(<span class=\"string\">&quot;property&quot;</span>);</span><br><span class=\"line\">                    <span class=\"comment\">//遍历所有的属性标签</span></span><br><span class=\"line\">                    propertys.forEach(property -&gt; &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                            <span class=\"comment\">//获取属性名</span></span><br><span class=\"line\">                            <span class=\"type\">String</span> <span class=\"variable\">propertyName</span> <span class=\"operator\">=</span> property.attributeValue(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">                            <span class=\"comment\">//获取属性类型</span></span><br><span class=\"line\">                            <span class=\"type\">Field</span> <span class=\"variable\">field</span> <span class=\"operator\">=</span> clazz.getDeclaredField(propertyName);</span><br><span class=\"line\">                            <span class=\"comment\">//获取方法名</span></span><br><span class=\"line\">                            <span class=\"type\">String</span> <span class=\"variable\">setMethodName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;set&quot;</span> + propertyName.substring(<span class=\"number\">0</span>, <span class=\"number\">1</span>).toUpperCase() + propertyName.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">                            <span class=\"comment\">//获取方法</span></span><br><span class=\"line\">                            <span class=\"type\">Method</span> <span class=\"variable\">method</span> <span class=\"operator\">=</span> clazz.getDeclaredMethod(setMethodName, field.getType());</span><br><span class=\"line\">                            <span class=\"comment\">//获取 value</span></span><br><span class=\"line\">                            <span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> property.attributeValue(<span class=\"string\">&quot;value&quot;</span>);</span><br><span class=\"line\">                            <span class=\"comment\">//获取 ref</span></span><br><span class=\"line\">                            <span class=\"type\">String</span> <span class=\"variable\">ref</span> <span class=\"operator\">=</span> property.attributeValue(<span class=\"string\">&quot;ref&quot;</span>);</span><br><span class=\"line\">                            <span class=\"type\">Object</span> <span class=\"variable\">actualValue</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (ref != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                                <span class=\"comment\">//表示非简单类型值</span></span><br><span class=\"line\">                                method.invoke(singletons.get(id), singletons.get(ref));</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span>(value != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                                <span class=\"comment\">//表示简单类型值</span></span><br><span class=\"line\">                                <span class=\"comment\">//获取属性类型名</span></span><br><span class=\"line\">                                <span class=\"type\">String</span> <span class=\"variable\">propertyTypeSimpleName</span> <span class=\"operator\">=</span> field.getType().getSimpleName();</span><br><span class=\"line\">                                <span class=\"keyword\">switch</span> (propertyTypeSimpleName) &#123;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;boolean&quot;</span>:</span><br><span class=\"line\">                                        actualValue = Boolean.parseBoolean(value);</span><br><span class=\"line\">                                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;byte&quot;</span>:</span><br><span class=\"line\">                                        actualValue = Byte.parseByte(value);</span><br><span class=\"line\">                                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;short&quot;</span>:</span><br><span class=\"line\">                                        actualValue = Short.parseShort(value);</span><br><span class=\"line\">                                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;int&quot;</span>:</span><br><span class=\"line\">                                        actualValue = Integer.parseInt(value);</span><br><span class=\"line\">                                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;long&quot;</span>:</span><br><span class=\"line\">                                        actualValue = Long.parseLong(value);</span><br><span class=\"line\">                                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;float&quot;</span>:</span><br><span class=\"line\">                                        actualValue = Float.parseFloat(value);</span><br><span class=\"line\">                                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;double&quot;</span>:</span><br><span class=\"line\">                                        actualValue = Double.parseDouble(value);</span><br><span class=\"line\">                                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;char&quot;</span>:</span><br><span class=\"line\">                                        actualValue = value.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">                                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;String&quot;</span>:</span><br><span class=\"line\">                                        actualValue = value;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                                <span class=\"comment\">//调用方法</span></span><br><span class=\"line\">                                method.invoke(singletons.get(id), actualValue);</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        &#125; <span class=\"keyword\">catch</span> (Exception e ) &#123;</span><br><span class=\"line\">                            e.printStackTrace();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">getBean</span><span class=\"params\">(String beanName)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> singletons.get(beanName);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"打包发布\"><a href=\"#打包发布\" class=\"headerlink\" title=\"打包发布\"></a>打包发布</h3><p>点击 Lifecycle中的 package 打包为 jar 包</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/40375991/1730816533142-f8c29e9b-ff84-444a-9772-ed30e2a45c1f.png\"></p>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.haishili.myspring.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.haishili.myspring.bean.OrderService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.myspringframework.core.ApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.myspringframework.core.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MySpringTest</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ApplicationContext</span> <span class=\"variable\">applicationContext</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;myspring.xml&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">vip</span> <span class=\"operator\">=</span> applicationContext.getBean(<span class=\"string\">&quot;vip&quot;</span>);</span><br><span class=\"line\">        System.out.println(vip);</span><br><span class=\"line\">        <span class=\"type\">OrderService</span> <span class=\"variable\">orderService</span> <span class=\"operator\">=</span> (OrderService) applicationContext.getBean(<span class=\"string\">&quot;orderService&quot;</span>);</span><br><span class=\"line\">        orderService.save();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h4><p><img src=\"https://cdn.nlark.com/yuque/0/2024/png/40375991/1730816661769-cfd185e0-c597-49a8-b435-c549177f0689.png\"></p>\n","text":"为啥要手写 Spring IOC 框架通过自己写一遍框架，可以更好理解 SpringIOC 的底层原理。 准备阶段创建myspring模块 引入相关依赖因为需要...","permalink":"/post/手写-SpringIOC-框架","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"笔记","slug":"笔记","count":5,"path":"api/categories/笔记.json"}],"tags":[{"name":"Spring","slug":"Spring","count":1,"path":"api/tags/Spring.json"},{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E5%95%A5%E8%A6%81%E6%89%8B%E5%86%99-Spring-IOC-%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">为啥要手写 Spring IOC 框架</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%86%E5%A4%87%E9%98%B6%E6%AE%B5\"><span class=\"toc-text\">准备阶段</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAmyspring%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">创建myspring模块</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%85%A5%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">引入相关依赖</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%86%E5%A4%87%E5%A5%BD%E8%A6%81%E7%AE%A1%E7%90%86%E7%9A%84-Bean\"><span class=\"toc-text\">准备好要管理的 Bean</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Vip%E7%B1%BB\"><span class=\"toc-text\">Vip类</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#OrderDao%E7%B1%BB\"><span class=\"toc-text\">OrderDao类</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#OrderService%E7%B1%BB\"><span class=\"toc-text\">OrderService类</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%86%99%E5%A5%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">写好配置文件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E9%98%B6%E6%AE%B5\"><span class=\"toc-text\">编写阶段</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99-ApplicationContext%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">编写 ApplicationContext接口</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99-ClassPathXmlApplicationContext-%E7%B1%BB\"><span class=\"toc-text\">编写 ClassPathXmlApplicationContext 类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%8C%85%E5%8F%91%E5%B8%83\"><span class=\"toc-text\">打包发布</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">结果</span></a></li></ol></li></ol>","author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"Vue 生命周期","uid":"2a1c9c4cc2eeb3e5662886a5a5254cb8","slug":"Vue生命周期","date":"2024-04-20T01:09:00.000Z","updated":"2024-04-20T01:37:57.638Z","comments":true,"path":"api/articles/Vue生命周期.json","keywords":null,"cover":"/img/Vuelifetime_cover.png","text":"Vue生命周期生命周期概念​ 官方解释 ​ 每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并...","permalink":"/post/Vue生命周期","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"笔记","slug":"笔记","count":5,"path":"api/categories/笔记.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"},{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}}}}