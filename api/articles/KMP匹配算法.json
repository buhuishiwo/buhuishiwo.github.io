{"title":"KMP匹配算法","uid":"3a720846f06b194cf852fdd1addeae93","slug":"KMP匹配算法","date":"2023-10-29T10:09:30.000Z","updated":"2023-10-30T10:18:23.328Z","comments":true,"path":"api/articles/KMP匹配算法.json","keywords":null,"cover":"/img/KMP_cover.png","content":"<h3 id=\"KMP匹配算法\"><a href=\"#KMP匹配算法\" class=\"headerlink\" title=\"KMP匹配算法\"></a>KMP匹配算法</h3><h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>将待查询字符串 <strong><u>searchString</u></strong> 使用一串 next 数组表表示，当与源字符串 <strong>sourceString</strong> 匹配时，<strong>sourceString</strong> 不需要移动，只需要将 <strong><u>searchString</u></strong> 移动<strong>n</strong>位，然后再继续匹配，直到结束。</p>\n<h4 id=\"next-数组\"><a href=\"#next-数组\" class=\"headerlink\" title=\"next 数组\"></a>next 数组</h4><p><strong>next 数组的值就是代表当前字符之前的字符串中，有多大长度的相同前缀后缀。例如如果 next[j]&#x3D;k，代表 j 之前的字符串中有最大长度为 k 的相同前缀后缀。</strong></p>\n<p>至于为什么要求next 数组，等我们知道了 next 数组是怎么求的之后，再告诉大家</p>\n<p>那么如何来求 next 数组呢？</p>\n<p>如图：</p>\n<p><img src=\"https://pic.imgdb.cn/item/653de306c458853aef47b496.png\" alt=\"图片\"></p>\n<p>长度为前1个字符的子串<code>a</code>，最长相同前后缀的长度为0。（注意字符串的<strong>前缀是指不包含最后一个字符的所有以第一个字符开头的连续子串</strong>；<strong>后缀是指不包含第一个字符的所有以最后一个字符结尾的连续子串</strong>。）</p>\n<p><img src=\"https://pic.imgdb.cn/item/653de327c458853aef482272.png\" alt=\"图片\">长度为前2个字符的子串<code>aa</code>，最长相同前后缀的长度为1。</p>\n<p><img src=\"https://pic.imgdb.cn/item/653de33fc458853aef486fa9.png\" alt=\"图片\">长度为前3个字符的子串<code>aab</code>，最长相同前后缀的长度为0。</p>\n<p>以此类推：长度为前4个字符的子串<code>aaba</code>，最长相同前后缀的长度为1。长度为前5个字符的子串<code>aabaa</code>，最长相同前后缀的长度为2。长度为前6个字符的子串<code>aabaaf</code>，最长相同前后缀的长度为0。</p>\n<p>那么把求得的最长相同前后缀的长度就是对应前缀表的元素，如图：<img src=\"https://pic.imgdb.cn/item/653de357c458853aef48bf6b.png\" alt=\"图片\"></p>\n<p>可以看出模式串与前缀表对应位置的数字表示的就是：<strong>下标i之前（包括i）的字符串中，有多大长度的相同前缀后缀。</strong></p>\n<p>理解原理后，我们来用代码实现一下</p>\n<p>首先我们定义 getNext 函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">getNext</span><span class=\"params\">(<span class=\"type\">char</span> *p,<span class=\"type\">int</span> *next)</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>初始化</p>\n<p>对相应的变量初始化</p>\n</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> j=<span class=\"number\">0</span>;</span><br><span class=\"line\">next[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;\t\t\t<span class=\"comment\">//第一个字符没有前后缀</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>前后缀不相同情况</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"built_in\">strlen</span>(p);i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(j&gt;<span class=\"number\">0</span>||p[i]!=p[j])</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    j=next[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>前后缀相同情况</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(p[i]==p[j])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  j++;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新 next 数组</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">next[i]=j;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>合并代码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">getNext</span><span class=\"params\">(<span class=\"type\">char</span> *p,<span class=\"type\">int</span> *next)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> j=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tnext[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;\t\t\t<span class=\"comment\">//第一个字符没有前后缀</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"built_in\">strlen</span>(p);i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(j&gt;<span class=\"number\">0</span>||p[i]!=p[j])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      j=next[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p[i]==p[j])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    next[i]=j;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>相信大家通过代码更加理解了如何求 next 数组了。</p>\n<h4 id=\"匹配\"><a href=\"#匹配\" class=\"headerlink\" title=\"匹配\"></a>匹配</h4><p>通过以上对 next 数组的理解之后，我们再来KMP 算法是如何匹配的，我们已知，next 数组所代表的就是最大前缀后缀值，也就是说，在失配字符前，有多少个可重复的前缀后缀，这也意味着在某个字符失配时，该字符对应的next 值会告诉你下一步匹配中，模式串应该跳到哪个位置（跳到next [j-1] 的位置，也就是在失配字符之前已经重复出现过的前缀的后一个字符）。如果next [j] 等于0或-1，则跳到模式串的开头字符，若next [j] &#x3D; k 且 k &gt; 0，代表下次匹配跳到j 之前的某个字符，而不是跳到开头，且具体跳过了k 个字符。</p>\n<p>图例表示</p>\n<p><img src=\"https://pic.imgdb.cn/item/653de37bc458853aef493307.gif\" alt=\"图例表示\"></p>\n<p>可以看到，当失配时，会跳到当前字符p[j]前一个字符p[j-1]的 next[j-1]值所指的字符，然后接着匹配，直至全部匹配到。</p>\n<p>我们可以简单的用代码表示</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">kmp</span><span class=\"params\">(<span class=\"type\">char</span> *s,<span class=\"type\">char</span> *t)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> j=<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"built_in\">strlen</span>(s);i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(j==<span class=\"number\">0</span>||s[i]==t[j])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      j++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      j=next[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(j==<span class=\"built_in\">strlen</span>(t))</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> i-j;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"演示代码\"><a href=\"#演示代码\" class=\"headerlink\" title=\"演示代码\"></a>演示代码</h4><p>我们将两个函数合并，并运行一下程序</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">getNext</span><span class=\"params\">(<span class=\"type\">char</span> *p, <span class=\"type\">int</span> *next)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    next[<span class=\"number\">0</span>] = <span class=\"number\">0</span>; <span class=\"comment\">// 第一个字符没有前后缀</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"built_in\">strlen</span>(p); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &gt; <span class=\"number\">0</span> &amp;&amp; p[i] != p[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            j = next[j - <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p[i] == p[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        next[i] = j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">kmp</span><span class=\"params\">(<span class=\"type\">char</span> s[], <span class=\"type\">char</span> t[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> n = <span class=\"built_in\">strlen</span>(t);</span><br><span class=\"line\">    <span class=\"type\">int</span> next[n];</span><br><span class=\"line\">    getNext(t, next);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">strlen</span>(s); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &gt; <span class=\"number\">0</span> &amp;&amp; s[i] != t[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            j = next[j - <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[i]==t[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j == <span class=\"built_in\">strlen</span>(t))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i - j+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> s[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,s);</span><br><span class=\"line\">    <span class=\"type\">char</span> t[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>,t);</span><br><span class=\"line\">    getchar();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, kmp(s, t) + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>结果</p>\n<img src=\"https://pic.imgdb.cn/item/653de3e8c458853aef4a96a2.png\" style=\"zoom:200%;\" />\n\n<p>正确输出结果，abac 在 ababac 中第一次出现未知是 3。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>KMP 算法对于初学者来说确实会有些迷惑，但是只要理解了核心思想，现在看来也还是蛮简单的对吧。希望这对你学习 KMP 算法有所帮助</p>\n<p><u>部分内容来自 <em><a href=\"https://mp.weixin.qq.com/s/MoRBHbS4hQXn7LcPdmHmIg\">代码随想录</a></em> </u></p>\n","text":"KMP匹配算法思路将待查询字符串 searchString 使用一串 next 数组表表示，当与源字符串 sourceString 匹配时，sourceStri...","permalink":"/post/KMP匹配算法","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"笔记","slug":"笔记","count":2,"path":"api/categories/笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"},{"name":"数据结构","slug":"数据结构","count":1,"path":"api/tags/数据结构.json"},{"name":"C 语言","slug":"C-语言","count":1,"path":"api/tags/C-语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#KMP%E5%8C%B9%E9%85%8D%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">KMP匹配算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#next-%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">next 数组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">匹配</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%BC%94%E7%A4%BA%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">演示代码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol>","author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"JavaScript事件对象","uid":"70c0c770528c6f3eab2585436d750f40","slug":"JavaScript事件对象","date":"2023-10-30T12:00:06.000Z","updated":"2023-10-30T13:11:03.906Z","comments":true,"path":"api/articles/JavaScript事件对象.json","keywords":null,"cover":"/img/JSObject_cover.png","text":"事件对象什么是事件对象 也是一个对象，对象中有事件触发时的相关信息 例如：鼠标点击事件中，事件对象就存放了鼠标点在了哪个位置等信息 使用场景是什么 可以判断用户...","permalink":"/post/JavaScript事件对象","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"笔记","slug":"笔记","count":2,"path":"api/categories/笔记.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"}],"author":{"name":"Mesonsaber","slug":"blog-author","avatar":"/img/logo.png","link":"/","description":"励志做一个好程序员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/336414738?spm_id_from=333.1007.0.0"},"github":{"icon":"/svg/github.svg","link":"https://github.com/buhuishiwo"},"music":{"icon":"/svg/CN_NetEase music.svg","link":"https://music.163.com/#/user/home?id=466698853"}}}}},"next_post":{}}